/*
 *  Copyright (C) 2012 Jasper Vries
 *  This file is part of The Dutch Trainset 2
 *  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 *  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
*/

//recolour sprites for hopper cargo
//note: mappings for the windows palette are incorrect, awaiting FS#4868
//encode grf in DOS for correct results

recolour_grai = reserve_sprites(1);
replace(recolour_grai) {
    recolour_sprite {
        0xE5: 0x3F;
        0xE8: 0x40;
        0xE9: 0x41;
        0xEA: 0x42;
        0xEB: 0x43;
        0xEC: 0x33;
        0xED: 0x44;
        0xEE: 0x34;
    }
}

recolour_sulp = reserve_sprites(1);
replace(recolour_sulp) {
    recolour_sprite {
        0xE5: 0x40;
        0xE8: 0x41;
        0xE9: 0x57;
        0xEA: 0x5E;
        0xEB: 0x42;
        0xEC: 0x32;
        0xED: 0x5F;
        0xEE: 0x34;
    }
}

recolour_sand = reserve_sprites(1);
replace(recolour_sand) {
    recolour_sprite {
        0xE5: 0x6F;
        0xE8: 0x3A;
        0xE9: 0x1E;
        0xEA: 0x3B;
        0xEB: 0x26;
        0xEC: 0x1F;
        0xED: 0x27;
        0xEE: 0xA8;
    }
}

recolour_aore = reserve_sprites(1);
replace(recolour_aore) {
    recolour_sprite {
        0xE5: 0x48;
        0xE8: 0x2B;
        0xE9: 0x4A;
        0xEA: 0x2C;
        0xEB: 0xA2;
        0xEC: 0x4B;
        0xED: 0x4C;
        0xEE: 0x75;
    }
}

recolour_core = reserve_sprites(1);
replace(recolour_core) {
    recolour_sprite {
        0xE5: 0x18;
        0xE8: 0x19;
        0xE9: 0x36;
        0xEA: 0x1A;
        0xEB: 0x37;
        0xEC: 0x38;
        0xED: 0x39;
        0xEE: 0x1D;
    }
}

recolour_fert = reserve_sprites(1);
replace(recolour_fert) {
    recolour_sprite {
        0xE5: 0x69;
        0xE8: 0x35;
        0xE9: 0x6B;
        0xEA: 0x6C;
        0xEB: 0x6D;
        0xEC: 0x6E;
        0xED: 0x6F;
        0xEE: 0x3A;
    }
}

recolour_iore = reserve_sprites(1);
replace(recolour_iore) {
    recolour_sprite {
        0xE5: 0x46;
        0xE8: 0x47;
        0xE9: 0x48;
        0xEA: 0x49;
        0xEB: 0x4A;
        0xEC: 0x4B;
        0xED: 0x4C;
        0xEE: 0x4D;
    }
}

recolour_clay = reserve_sprites(1);
replace(recolour_clay) {
    recolour_sprite {
        0xE5: 0x22;
        0xE8: 0x6D;
        0xE9: 0x6D;
        0xEA: 0x4C;
        0xEB: 0x75;
        0xEC: 0x76;
        0xED: 0x4F;
        0xEE: 0x26;
    }
}

recolour_olsd = reserve_sprites(1);
replace(recolour_olsd) {
    recolour_sprite {
        0xE5: 0x22;
        0xE8: 0x6D;
        0xE9: 0x38;
        0xEA: 0x5C;
        0xEB: 0x6F;
        0xEC: 0x5E;
        0xED: 0x3B;
        0xEE: 0x26;
    }
}

recolour_lime = reserve_sprites(1);
replace(recolour_lime) {
    recolour_sprite {
        0xE5: 0x08;
        0xE8: 0x0A;
        0xE9: 0x1E;
        0xEA: 0x0B;
        0xEB: 0x3B;
        0xEC: 0x0C;
        0xED: 0xDE;
        0xEE: 0x0E;
    }
}

recolour_pota = reserve_sprites(1);
replace(recolour_pota) {
    recolour_sprite {
        0xE5: 0x16;
        0xE8: 0x17;
        0xE9: 0x0D;
        0xEA: 0x87;
        0xEB: 0x0E;
        0xEC: 0xD2;
        0xED: 0x0F;
        0xEE: 0x0F;
    }
}

recolour_grvl = reserve_sprites(1);
replace(recolour_grvl) {
    recolour_sprite {
        0xE5: 0x07;
        0xE8: 0x08;
        0xE9: 0x09;
        0xEA: 0x0A;
        0xEB: 0x0B;
        0xEC: 0x0C;
        0xED: 0x0D;
        0xEE: 0x0E;
    }
}

recolour_coal = reserve_sprites(1);
replace(recolour_coal) {
    recolour_sprite {
        0xE5: 0x01;
        0xE8: 0x01;
        0xE9: 0x02;
        0xEA: 0x03;
        0xEB: 0x01;
        0xEC: 0x04;
        0xED: 0x05;
        0xEE: 0x06;
    }
}

recolour_frut = reserve_sprites(1);
replace(recolour_frut) {
    recolour_sprite {
        0xE5: 0x03;
        0xE8: 0x04;
        0xE9: 0x1D;
        0xEA: 0x40;
        0xEB: 0xC2;
        0xEC: 0x42;
        0xED: 0x5F;
        0xEE: 0x43;
    }
}

recolour_scmt = reserve_sprites(1);
replace(recolour_scmt) {
    recolour_sprite {
        0xE5: 0x02;
        0xE8: 0x03;
        0xE9: 0x7B;
        0xEA: 0x11;
        0xEB: 0x13;
        0xEC: 0x4C;
        0xED: 0x16;
        0xEE: 0x17;
    }
}

recolour_sgbt = reserve_sprites(1);
replace(recolour_sgbt) {
    recolour_sprite {
        0xE5: 0x36;
        0xE8: 0x69;
        0xE9: 0x5C;
        0xEA: 0x6D;
        0xEB: 0x3B;
        0xEC: 0x1A;
        0xED: 0x6C;
        0xEE: 0x35;
    }
}

recolour_sgcn = reserve_sprites(1);
replace(recolour_sgcn) {
    recolour_sprite {
        0xE5: 0x60;
        0xE8: 0x69;
        0xE9: 0x55;
        0xEA: 0x53;
        0xEB: 0x51;
        0xEC: 0x59;
        0xED: 0x50;
        0xEE: 0x40;
    }
}

recolour_java = reserve_sprites(1);
replace(recolour_java) {
    recolour_sprite {
        0xE5: 0x68;
        0xE8: 0x6A;
        0xE9: 0x60;
        0xEA: 0x69;
        0xEB: 0x46;
        0xEC: 0x5C;
        0xED: 0x3C;
        0xEE: 0x47;
    }
}

recolour_blue = reserve_sprites(1);
replace(recolour_blue) {
    recolour_sprite {
        0xE5: 0x90;
        0xE8: 0x91;
        0xE9: 0x92;
        0xEA: 0x93;
        0xEB: 0x94;
        0xEC: 0x95;
        0xED: 0x96;
        0xEE: 0x97;
    }
}

/*
* GENERIC RECOLOUR CALLBACK
*/

switch(FEAT_TRAINS, SELF, switch_generic_recolour, cargo_type_in_veh) {
	GRAI: recolour_grai;
    SULP: recolour_sulp;
    SAND: recolour_sand;
    AORE: recolour_aore;
    CORE: recolour_core;
    FERT: recolour_fert;
    IORE: recolour_iore;
    CLAY: recolour_clay;
    OLSD: recolour_olsd;
    LIME: recolour_lime;
    POTA: recolour_pota;
    GRVL: recolour_grvl;
    COAL: recolour_coal;
    FRUT: recolour_frut;
    SCMT: recolour_scmt;
    SGBT: recolour_sgbt;
    SGCN: recolour_sgcn;
    JAVA: recolour_java;
    recolour_blue;
}
